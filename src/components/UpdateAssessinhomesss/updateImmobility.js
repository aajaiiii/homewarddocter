import React, { useState, useEffect } from "react";
import CountUp from "react-countup";

const ImmobilityForm = ({ formData, onSave, onClose }) => {
    const [formValues, setFormValues] = useState({ ...formData });
    const [totalScore, setTotalScore] = useState(0);
    const [groupMessage, setGroupMessage] = useState("");

    useEffect(() => {
        calculateTotalScore();
    }, [formValues]);

    const handleChange = (name, value) => {
        setFormValues((prev) => ({
            ...prev,
            [name]: Number(value),
        }));
    };

    const calculateTotalScore = () => {
        const keys = [
            "Pick_up_food",
            "Clean_up",
            "Put_on_clothes",
            "Shower",
            "Using_the_toilet",
            "Get_up",
            "Walk_inside",
            "Up_down_stairs",
            "Continence_urine",
            "Continence_stool",
            "Walk_outside",
            "Cooking",
            "Household_chores",
            "Shopping",
            "Taking_public_transportation",
            "Taking_medicine",
        ];

        let total = 0;
        keys.forEach((key) => {
            total += formValues[key] || 0;
        });

        setTotalScore(total);

        if (total >= 16 && total <= 20) {
            setGroupMessage("‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 1 (‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏î‡∏µ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠)");
        } else if (total >= 21 && total <= 35) {
            setGroupMessage("‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 2 (‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô)");
        } else if (total >= 36) {
            setGroupMessage("‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 3 (‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏ô‡πâ‡∏≠‡∏¢ ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)");
        } else {
            setGroupMessage("-");
        }
    };

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const handleClearSelections = () => {
        setFormValues({
            Pick_up_food: null,
            Clean_up: null,
            Put_on_clothes: null,
            Shower: null,
            Using_the_toilet: null,
            Get_up: null,
            Walk_inside: null,
            Up_down_stairs: null,
            Continence_urine: null,
            Continence_stool: null,
            Walk_outside: null,
            Cooking: null,
            Household_chores: null,
            Shopping: null,
            Taking_public_transportation: null,
            Taking_medicine: null,
        });
        setTotalScore(0);
        setGroupMessage("-");
    };
    const [isEdited, setIsEdited] = useState(false); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    useEffect(() => {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        setIsEdited(JSON.stringify(formValues) !== JSON.stringify(formData));
    }, [formValues, formData]);

    const handleSubmit = (e) => {
        e.preventDefault();
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡πÑ‡∏´‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const keys = [
            "Pick_up_food", "Clean_up", "Put_on_clothes", "Shower",
            "Using_the_toilet", "Get_up", "Walk_inside", "Up_down_stairs",
            "Continence_urine", "Continence_stool", "Walk_outside",
            "Cooking", "Household_chores", "Shopping",
            "Taking_public_transportation", "Taking_medicine"
        ];

        const isComplete = keys.every(key => formValues[key] !== null && formValues[key] !== undefined);

        if (!isComplete) {
            window.alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠");
            return;
        }

        // üîπ ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
        if (!isEdited) {
            const confirmSave = window.confirm("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?");
            if (!confirmSave) return;
        }

        onSave({ ...formValues, totalScore });
    };

    const handleCancel = () => {
        // üîπ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        if (isEdited) {
            const confirmExit = window.confirm("‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?\n‡∏´‡∏≤‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏∞‡∏ó‡∏¥‡πâ‡∏á");
            if (!confirmExit) return;
        }
        onClose(); // ‡∏õ‡∏¥‡∏î Modal
    };

    const renderRadioGroup = (label, name) => (
        <div className="m-1">
            <label className="form-label ms-2 mb-0 mt-3">{label} <span style={{ color: 'red' }}> *</span></label>

            {[1, 2, 3].map((value) => (
                <div key={value} className='ms-4 mt-2 d-flex align-items-center'>
                    <input
                        type="radio"
                        name={name}
                        value={value}
                        checked={formValues[name] === value}
                        onChange={(e) => handleChange(name, e.target.value)}
                        style={{
                            transform: 'scale(1.5)',
                            marginRight: '8px',
                            verticalAlign: 'middle'
                        }}
                    />
                    <label className="form-check-label" style={{ marginBottom: "0px", verticalAlign: "middle", marginLeft: "8px" }}>
                        {value} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
                    </label>
                </div>
            ))}
        </div>
    );

    const getGroupStyle = () => {
        if (totalScore >= 36) return "text-danger"; // ‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 3
        if (totalScore >= 21) return "text-primary"; // ‡∏™‡∏µ‡∏ü‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 2
        if (totalScore >= 16) return "text-success"; // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 1
        return "text-dark"; // ‡∏™‡∏µ‡∏î‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    };


    return (
        <div className="modal show d-block" tabIndex="-1">
            <div className="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                <div className="modal-content">
                    {/* Header */}
                    <div className="modal-header d-flex justify-content-center">
                        <h5 className="modal-title text-black text-center">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Immobility</h5>
                    </div>

                    {/* Body */}
                    <div className="modal-body">
                        <form onSubmit={handleSubmit}>
                            <div className="m-2">
                                <b>‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</b>
                                <span style={{ color: "red" }}> *</span>
                                <p className="mt-3">1 = ‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á</p>
                                <p>2 = ‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏ô‡∏ä‡πà‡∏ß‡∏¢</p>
                                <p>3 = ‡∏ó‡∏≥‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢</p>
                            </div>

                            {/* ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */}
                            {[
                                { name: "Pick_up_food", label: "1. ‡∏ï‡∏±‡∏Å/‡∏´‡∏¢‡∏¥‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô" },
                                { name: "Clean_up", label: "2. ‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤ ‡πÅ‡∏õ‡∏£‡∏á‡∏ü‡∏±‡∏ô ‡∏´‡∏ß‡∏µ‡∏ú‡∏°" },
                                { name: "Put_on_clothes", label: "3. ‡∏™‡∏ß‡∏°‡πÉ‡∏™‡πà‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤" },
                                { name: "Shower", label: "4. ‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥" },
                                { name: "Using_the_toilet", label: "5. ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏´‡πâ‡∏≠‡∏á‡∏™‡πâ‡∏ß‡∏°" },
                                { name: "Get_up", label: "6. ‡∏•‡∏∏‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏≠‡∏ô/‡πÄ‡∏ï‡∏µ‡∏¢‡∏á" },
                                { name: "Walk_inside", label: "7. ‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô" },
                                { name: "Up_down_stairs", label: "8. ‡∏Ç‡∏∂‡πâ‡∏ô‡∏•‡∏á‡∏ö‡∏±‡∏ô‡πÑ‡∏î 1 ‡∏ä‡∏±‡πâ‡∏ô" },
                                { name: "Continence_urine", label: "9. ‡∏Å‡∏•‡∏±‡πâ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞" },
                                { name: "Continence_stool", label: "10. ‡∏Å‡∏•‡∏±‡πâ‡∏ô‡∏≠‡∏∏‡∏à‡∏à‡∏≤‡∏£‡∏∞" },
                                { name: "Walk_outside", label: "11. ‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏≠‡∏Å‡∏ö‡πâ‡∏≤‡∏ô" },
                                { name: "Cooking", label: "12. ‡∏ó‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏≠‡∏≤‡∏´‡∏≤‡∏£" },
                                { name: "Household_chores", label: "13. ‡∏Å‡∏ß‡∏≤‡∏î/‡∏ñ‡∏π‡∏ö‡πâ‡∏≤‡∏ô ‡∏ã‡∏±‡∏Å‡∏£‡∏µ‡∏î‡∏ú‡πâ‡∏≤" },
                                { name: "Shopping", label: "14. ‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á/‡∏à‡πà‡∏≤‡∏¢‡∏ï‡∏•‡∏≤‡∏î" },
                                { name: "Taking_public_transportation", label: "15. ‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞" },
                                { name: "Taking_medicine", label: "16. ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏¢‡∏≤‡∏ï‡∏≤‡∏°‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏™‡∏±‡πà‡∏á" },
                            ].map((item) => renderRadioGroup(item.label, item.name))}

                            <div className="d-flex justify-content-end mt-2">
                                <span className="clear-selection text-secondary"
                                    onClick={handleClearSelections}>
                                    ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
                                </span>
                            </div>



                            <div className="m-3">
                                <b>
                                    {totalScore !== null && (
                                        <div className={`mt-4 ${getGroupStyle()}`}>
                                            <h4>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏ß‡∏° = <CountUp end={totalScore} duration={2} /></h4>
                                            <p>{groupMessage}</p>
                                        </div>
                                    )}
                                </b>
                            </div>
                        </form>

                    </div>

                    {/* Footer */}
                    <div className="modal-footer d-flex justify-content-between">

                        <button className="btn-EditMode btn-secondary" onClick={handleCancel}>
                            ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                        </button>
                        <button className="btn-EditMode btnsave" onClick={handleSubmit}>
                            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                        </button>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default ImmobilityForm;
