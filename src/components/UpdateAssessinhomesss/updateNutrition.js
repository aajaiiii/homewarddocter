import React, { useState, useEffect } from "react";
import CountUp from "react-countup";

const NutritionForm = ({ formData, onSave, onClose, name, surname }) => {
    const [formValues, setFormValues] = useState({ ...formData });
    const [bmr, setBmr] = useState(formData?.bmr || 0);
    const [tdee, setTdee] = useState(formData?.tdee || 0);
    const [isEdited, setIsEdited] = useState(false); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const [errors, setErrors] = useState({}); // ‚úÖ State ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î

    useEffect(() => {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        setIsEdited(JSON.stringify(formValues) !== JSON.stringify(formData));
    }, [formValues, formData]);

    const activityFactors = {
        sedentary: 1.2,
        lightly_active: 1.375,
        moderately_active: 1.55,
        very_active: 1.725,
        super_active: 1.9,
    };

    useEffect(() => {
        calculateBmr();
    }, [formValues.weight, formValues.height, formValues.userAge, formValues.gender]);

    useEffect(() => {
        calculateTdee();
    }, [bmr, formValues.activityLevel]);

    const calculateBmr = () => {
        const { weight, height, userAge, gender } = formValues;
        if (!weight || !height || !userAge || !gender) return;

        let calculatedBmr = gender === "‡∏ä‡∏≤‡∏¢"
            ? 88.362 + 13.397 * weight + 4.799 * height - 5.677 * userAge
            : 447.593 + 9.247 * weight + 3.098 * height - 4.330 * userAge;

        setBmr(Math.round(calculatedBmr));
        setFormValues((prev) => ({ ...prev, bmr: Math.round(calculatedBmr) }));
    };

    const calculateTdee = () => {
        if (!bmr || !formValues.activityLevel) return;
        setTdee(Math.round(bmr * (activityFactors[formValues.activityLevel] || 1)));
        setFormValues((prev) => ({ ...prev, tdee: Math.round(bmr * (activityFactors[formValues.activityLevel] || 1)) }));
    };

    const handleChange = (e) => {
        const { id, value } = e.target;
        setFormValues((prev) => ({
            ...prev,
            [id]: value,
        }));

        // ‚úÖ ‡∏•‡∏ö error ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå
        if (value.trim() !== "") {
            setErrors((prev) => ({
                ...prev,
                [id]: "",
            }));
        }
    };

    const handleBlur = (e) => {
        const { id, value } = e.target;

        // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏ô‡∏´‡∏°‡∏î ‡πÉ‡∏´‡πâ‡∏Ç‡∏∂‡πâ‡∏ô error
        if (value.trim() === "") {
            setErrors((prev) => ({
                ...prev,
                [id]: `‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å${id === "weight" ? "‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å" : "‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á"}`,
            }));
        }
    };

    const validateForm = () => {
        let newErrors = {};

        // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ñ‡∏π‡∏Å‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (!formValues.weight) newErrors.weight = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å";
        if (!formValues.height) newErrors.height = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á";
        if (!formValues.activityLevel) newErrors.activityLevel = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ó‡∏≥";
        if (!formValues.medicalFood) newErrors.medicalFood = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå";
        if (!formValues.favoriteFood) newErrors.favoriteFood = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö";
        if (!formValues.nutritionStatus) newErrors.nutritionStatus = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏ß‡∏∞‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£";

        // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å checkbox ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!formValues.intakeMethod || formValues.intakeMethod.length === 0) {
        newErrors.intakeMethod = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏Ç‡πâ‡∏≠";
    }
    if (!formValues.foodTypes || formValues.foodTypes.length === 0) {
        newErrors.foodTypes = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏Ç‡πâ‡∏≠";
    }
    if (!formValues.cooks || formValues.cooks.length === 0) {
        newErrors.cooks = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏Ç‡πâ‡∏≠";
    }

        setErrors(newErrors);
        return Object.keys(newErrors).length === 0; // ‚úÖ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ error ‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ `true`
    };

    const handleCheckboxChange = (fieldName, option, checked) => {
        setFormValues((prev) => {
            const currentValues = prev[fieldName] || [];
            const updatedValues = checked
                ? [...currentValues, option]
                : currentValues.filter((item) => item !== option);
    
            // ‚úÖ ‡∏•‡∏ö error ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å checkbox
            setErrors((prevErrors) => ({
                ...prevErrors,
                [fieldName]: updatedValues.length === 0 ? "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏Ç‡πâ‡∏≠" : "",
            }));
    
            return {
                ...prev,
                [fieldName]: updatedValues,
            };
        });
    };

    const handleSubmit = (e) => {
        e.preventDefault();

        if (JSON.stringify(formValues) === JSON.stringify(formData)) {
            const confirmSave = window.confirm("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?");
            if (!confirmSave) return;
        }

        if (!validateForm()) {
            // alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
            return;
        }


        onSave(formValues);
    };

    const handleCancel = () => {
        // üîπ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        if (isEdited) {
            const confirmExit = window.confirm("‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?\n‡∏´‡∏≤‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏∞‡∏ó‡∏¥‡πâ‡∏á");
            if (!confirmExit) return;
        }
        onClose(); // ‡∏õ‡∏¥‡∏î Modal
    };

    return (
        <div className="modal show d-block" tabIndex="-1">
            <div className="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                <div className="modal-content">
                    {/* Header */}
                    <div className="modal-header d-flex justify-content-center">
                        <h5 className="modal-title text-black text-center">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Nutrition</h5>
                    </div>

                    {/* Body */}
                    <div className="modal-body">
                        <form onSubmit={handleSubmit}>
                            <div className="m-2">
                                <label className="form-label">‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• :</label>
                                <input type="text" className="form-control" id="gender" disabled value={`${name} ${surname}`} />
                            </div>
                            <div className="m-2">
                                <label className="form-label">‡πÄ‡∏û‡∏® :</label>
                                <input type="text" className="form-control" id="gender" disabled value={formValues.gender || ""} />
                            </div>
                            <div className="m-2">
                                <label className="form-label mt-2">‡∏≠‡∏≤‡∏¢‡∏∏ :</label>
                                <div className="d-flex align-items-center">
                                    <input
                                        type="number"
                                        className="form-control me-2"
                                        id="userAge"
                                        disabled
                                        placeholder="‡∏õ‡∏µ"
                                        value={formValues.userAge || ""}
                                        onChange={handleChange}
                                        style={{ width: "60px" }}
                                    />
                                    <span style={{ marginRight: "10px" }}>‡∏õ‡∏µ</span>
                                    <input
                                        type="number"
                                        className="form-control me-2"
                                        id="userAgeInMonths"
                                        disabled
                                        placeholder="‡πÄ‡∏î‡∏∑‡∏≠‡∏ô"
                                        value={formValues.userAgeInMonths || ""}
                                        onChange={handleChange}
                                        style={{ width: "60px" }}
                                    />
                                    <span>‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</span>
                                </div>
                            </div>

                            <div className="m-2">
                                <label className="form-label mt-2">‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å (‡∏Å‡∏¥‡πÇ‡∏•‡∏Å‡∏£‡∏±‡∏°) : <span style={{ color: "#666", fontSize: "15px" }}>(‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏° ‡πÄ‡∏ä‡πà‡∏ô 40, 50.5)</span></label>
                                <input type="number"
                                    className={`form-control ${errors.weight ? "is-invalid" : ""}`}
                                    id="weight"
                                    placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å"
                                    style={{ width: "35%" }}
                                    value={formValues.weight || ""}
                                    onChange={handleChange}
                                    onBlur={handleBlur} // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ï‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á
                                />
                                {errors.weight && <p className="text-danger mt-2">{errors.weight}</p>}
                            </div>
                            <div className="m-2">
                                <label className="form-label mt-2">‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á (‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡∏¥‡πÄ‡∏°‡∏ï‡∏£) : <span style={{ color: "#666", fontSize: "15px" }}>(‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏° ‡πÄ‡∏ä‡πà‡∏ô 145, 165.5)</span></label>
                                <input type="number"
                                    className={`form-control ${errors.height ? "is-invalid" : ""}`}
                                    id="height" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á"
                                    style={{ width: "35%" }}
                                    value={formValues.height || ""}
                                    onChange={handleChange}
                                    onBlur={handleBlur} // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ï‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á
                                />
                                {errors.height && <p className="text-danger mt-2">{errors.height}</p>}
                            </div>
                            <div className="m-2">
                                <label className="form-label mt-2">‡∏Ñ‡πà‡∏≤ BMR (‡∏Å‡∏¥‡πÇ‡∏•‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô) :</label>
                                <h5 style={{ color: "#28a745" }}><CountUp end={bmr || 0} duration={1} /></h5>
                            </div>
                            <div className="m-2">
                                <label className="form-label mt-2">‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ó‡∏≥ :</label>
                                <select className={`form-select ${errors.activityLevel ? "is-invalid" : ""}`}
                                    id="activityLevel"
                                    value={formValues.activityLevel || ""}
                                    onChange={handleChange}
                                    onBlur={handleBlur} // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ï‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á
                                >
                                    <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</option>
                                    <option value="sedentary">‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏¢‡∏°‡∏≤‡∏Å</option>
                                    <option value="lightly_active">‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢ 1-3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå</option>
                                    <option value="moderately_active">‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢ 4-5 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå</option>
                                    <option value="very_active">‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢ 6-7 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå</option>
                                    <option value="super_active">‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏•‡∏∞ 2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ</option>
                                </select>
                                {errors.activityLevel && <p className="text-danger mt-2">{errors.activityLevel}</p>}
                            </div>

                            <div className="m-2">
                                <label className="form-label mt-2">‡∏Ñ‡πà‡∏≤ TDEE (‡∏Å‡∏¥‡πÇ‡∏•‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô) :</label>
                                <h5 style={{ color: "#fd7e14" }}><CountUp end={tdee || 0} duration={1} /></h5>
                            </div>

                            {/* ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£ */}
                            <div className="mt-2">
                                <div className="m-2">
                                    <label className="form-label mt-3">‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£ :</label>
                                    <p style={{ color: "gray" }}>(‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1 ‡∏Ç‡πâ‡∏≠)</p>
                                    {["‡∏Å‡∏¥‡∏ô‡πÄ‡∏≠‡∏á", "‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏õ‡πâ‡∏≠‡∏ô", "NG tube", "OG tube", "PEG", "IV"].map((option) => (
                                        <div className="ms-2 d-flex align-items-center" key={option} style={{ lineHeight: "35px" }}>
                                            <input type="checkbox" value={option}
                                                checked={formValues.intakeMethod?.includes(option) || false}
                                                style={{
                                                    transform: "scale(1.5)",
                                                    verticalAlign: 'middle'
                                                }}
                                                onChange={(e) => handleCheckboxChange("intakeMethod", option, e.target.checked)} />
                                            <span style={{ marginLeft: "10px" }}>{option}</span>
                                        </div>
                                    ))}
                                    {errors.intakeMethod && <p className="text-danger mt-2">{errors.intakeMethod}</p>}
                                </div>
                            </div>
                            <div className="m-2">
                                <label className="form-label mt-3">Food Intake (‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏≠‡∏≤‡∏´‡∏≤‡∏£) :</label>
                                <p style={{ color: "gray" }}>(‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1 ‡∏Ç‡πâ‡∏≠)</p>
                                {["‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤", "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏≠‡πà‡∏≠‡∏ô", "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏´‡∏•‡∏ß"].map((option) => (
                                    <div className="ms-2 d-flex align-items-center" key={option} style={{ lineHeight: "35px" }}>
                                        <input type="checkbox" value={option}
                                            checked={formValues.foodTypes?.includes(option) || false}
                                            style={{
                                                transform: "scale(1.5)",
                                                verticalAlign: 'middle'
                                            }}
                                            onChange={(e) => handleCheckboxChange("foodTypes", option, e.target.checked)} />
                                        <span style={{ marginLeft: "8px" }}>{option}</span>
                                    </div>
                                ))}
                                {errors.foodTypes && <p className="text-danger mt-2">{errors.foodTypes}</p>}
                            </div>
                            <div className="m-2">
                                <label className="form-label mt-3">‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå : <span style={{ color: "#666", fontSize: "15px" }}>(‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå "‡πÑ‡∏°‡πà‡∏°‡∏µ" )</span></label>
                                <textarea
                                    className={`form-control ${errors.medicalFood ? "is-invalid" : ""}`}
                                    rows="2" // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
                                    style={{ resize: "vertical" }}
                                    placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå"
                                    id="medicalFood"
                                    value={formValues.medicalFood || ""}
                                    onChange={handleChange}
                                    onBlur={handleBlur} // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ï‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á
                                />
                                {errors.medicalFood && <p className="text-danger mt-2">{errors.medicalFood}</p>}
                            </div>
                            <div className="m-2">
                                <label className="form-label mt-3">‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö : <span style={{ color: "#666", fontSize: "15px" }}>(‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡πÄ‡∏ä‡πà‡∏ô ‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå "‡πÑ‡∏°‡πà‡∏°‡∏µ")</span></label>
                                <textarea
                                    className={`form-control ${errors.favoriteFood ? "is-invalid" : ""}`}
                                    rows="2" // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
                                    style={{ resize: "vertical" }}
                                    placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå"
                                    id="favoriteFood"
                                    value={formValues.favoriteFood || ""}
                                    onChange={handleChange}
                                    onBlur={handleBlur} // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ï‡∏≠‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á
                                />
                                {errors.favoriteFood && <p className="text-danger mt-2">{errors.favoriteFood}</p>}
                            </div>
                            <div className="m-2">
                                <label className="form-label mt-3">‡∏Ñ‡∏ô‡∏õ‡∏£‡∏∏‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£ :</label>
                                <p style={{ color: "gray" }}>(‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1 ‡∏Ç‡πâ‡∏≠)</p>
                                {["‡∏õ‡∏£‡∏∏‡∏á‡πÄ‡∏≠‡∏á", "‡∏Ñ‡∏ô‡∏î‡∏π‡πÅ‡∏•‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ", "‡∏ã‡∏∑‡πâ‡∏≠‡∏à‡∏≤‡∏Å‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£"].map((option) => (
                                    <div className="ms-2 d-flex align-items-center" key={option} style={{ lineHeight: "35px" }}>
                                        <input type="checkbox" value={option}
                                            checked={formValues.cooks?.includes(option) || false}
                                            style={{
                                                transform: "scale(1.5)",
                                                verticalAlign: 'middle'
                                            }}
                                            onChange={(e) => handleCheckboxChange("cooks", option, e.target.checked)} />
                                        <span style={{ marginLeft: "10px" }}>{option}</span>
                                    </div>
                                ))}
                                {errors.cooks && <p className="text-danger mt-2">{errors.cooks}</p>}
                            </div>
                            {/* ‡∏†‡∏≤‡∏ß‡∏∞‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£ */}
                            <div className="m-2">
                                <label className="form-label mt-2">‡∏†‡∏≤‡∏ß‡∏∞‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£ :</label>
                                {["‡∏õ‡∏Å‡∏ï‡∏¥", "‡πÄ‡∏Å‡∏¥‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå", "‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏ì‡∏ë‡πå"].map((option) => (
                                    <div className="ms-2 d-flex align-items-center" key={option} style={{ lineHeight: "35px" }}>
                                        <input
                                            type="radio"
                                            id={option}  // ‡πÄ‡∏û‡∏¥‡πà‡∏° id ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡πà‡∏≤
                                            name="nutritionStatus"
                                            value={option}
                                            checked={formValues.nutritionStatus === option}
                                            style={{ transform: "scale(1.6)", verticalAlign: 'middle' }}
                                            onChange={(e) => setFormValues(prev => ({ ...prev, nutritionStatus: e.target.value }))} // ‡πÉ‡∏ä‡πâ setFormValues ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
                                        />
                                        <span style={{ marginLeft: "10px" }}>{option}</span>
                                    </div>
                                ))}
                                {errors.nutritionStatus && <p className="text-danger mt-2">{errors.nutritionStatus}</p>}
                            </div>

                        </form>
                    </div>

                    {/* Footer */}
                    <div className="modal-footer d-flex justify-content-between">
                        <button className="btn-EditMode btn-secondary" onClick={handleCancel}>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
                        <button className="btn-EditMode btnsave" onClick={handleSubmit}>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default NutritionForm;
