import React, { useState, useEffect } from "react";
import CountUp from "react-countup";
// import { Modal, Button } from "react-bootstrap";

const ZaritburdeninterviewForm = ({ formData, onSave, onClose }) => {
    const [formValues, setFormValues] = useState({ ...formData });
    const [totalScore, setTotalScore] = useState(0);
    const [burdenMessage, setBurdenMessage] = useState("");
    const [isEdited, setIsEdited] = useState(false); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà

    useEffect(() => {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        setIsEdited(JSON.stringify(formValues) !== JSON.stringify(formData));
    }, [formValues, formData]);

    useEffect(() => {
        calculateTotalScore();
    }, [formValues]);

    const handleChange = (name, value) => {
        setFormValues((prev) => ({
            ...prev,
            [name]: Number(value),
        }));
    };

    const calculateTotalScore = () => {
        const scoreKeys = Object.keys(formValues).filter((key) =>
            key.startsWith("question_")
        );

        let total = 0;
        scoreKeys.forEach((key) => {
            total += formValues[key] || 0;
        });

        setTotalScore(total);

        if (total <= 10) {
            setBurdenMessage("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏†‡∏≤‡∏£‡∏∞‡∏ó‡∏≤‡∏á‡πÉ‡∏à");
        } else if (total >= 11 && total <= 20) {
            setBurdenMessage("‡∏°‡∏µ‡∏†‡∏≤‡∏£‡∏∞‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á");
        } else if (total > 20) {
            setBurdenMessage("‡∏°‡∏µ‡∏†‡∏≤‡∏£‡∏∞‡∏´‡∏ô‡∏±‡∏Å");
        }
    };
    // üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const handleClearSelections = () => {
        const clearedValues = {};
        Object.keys(formValues).forEach(key => {
            if (key.startsWith("question_")) {
                clearedValues[key] = null;
            }
        });
        setFormValues({ ...formValues, ...clearedValues });
        setTotalScore(0);
        setBurdenMessage("");
    };
    const handleSubmit = (e) => {
        e.preventDefault();
        // üîπ ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
        if (!isEdited) {
            const confirmSave = window.confirm("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?");
            if (!confirmSave) return;
        }
        onSave({ ...formValues, totalScore });
    };
    const handleCancel = () => {
        // üîπ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        if (isEdited) {
            const confirmExit = window.confirm("‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?\n‡∏´‡∏≤‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡∏∞‡∏ó‡∏¥‡πâ‡∏á");
            if (!confirmExit) return;
        }
        onClose(); // ‡∏õ‡∏¥‡∏î Modal
    };
    const renderRadioGroup = (label, name) => (
        <div className="m-1">
            <label className="form-label ms-2 mb-0 mt-3">{label} <span style={{ color: 'red' }}> *</span></label>

            {[4, 3, 2, 1, 0].map((value) => (
                <div key={value} className='ms-4 mt-2 d-flex align-items-center'>
                    <input
                        type="radio"
                        name={name}
                        value={value}
                        checked={formValues[name] === value}
                        onChange={(e) => handleChange(name, e.target.value)}
                        style={{
                            transform: 'scale(1.5)', // ‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö label
                            marginRight: '8px',
                            verticalAlign: 'middle'
                        }}
                    />
                    <label className="form-check-label" style={{ marginBottom: "0px", verticalAlign: "middle", marginLeft: "8px" }}>
                        {value} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
                    </label>
                </div>
            ))}
        </div>
    );


    const getGroupStyle = () => {
        if (totalScore > 20) return "text-danger"; // ‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏£‡∏∞‡∏´‡∏ô‡∏±‡∏Å
        if (totalScore >= 11) return "text-primary"; // ‡∏™‡∏µ‡∏ü‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏£‡∏∞‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á
        if (totalScore >= 0) return "text-success"; // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏†‡∏≤‡∏£‡∏∞
        return "text-dark"; // ‡∏™‡∏µ‡∏î‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    };

    return (
        <div className="modal show d-block" tabIndex="-1">
            <div className="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                <div className="modal-content">
                    {/* Header */}
                    <div className="modal-header d-flex justify-content-center">
                        <h5 className="modal-title text-black text-center">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Zarit Burden Interview</h5>
                    </div>

                    {/* Body */}
                    <div className="modal-body">
                        <form onSubmit={handleSubmit}>
                            <div className="m-2">
                                <b>‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</b>
                                <span style={{ color: "red" }}> *</span>
                                <p className="mt-3">4 = ‡πÅ‡∏ó‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</p>
                                <p>3 = ‡∏Ñ‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡πà‡∏≠‡∏¢</p>
                                <p>2 = ‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á</p>
                                <p>1 = ‡∏ô‡∏≤‡∏ô‡πÜ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</p>
                                <p>0 = ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏•‡∏¢</p>
                            </div>

                            {/* ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */}
                            {[
                                { name: "question_1", label: "1. ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏≠‡∏á‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏î‡∏π‡πÅ‡∏•‡∏ç‡∏≤‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
                                { name: "question_2", label: "2. ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏î‡∏π‡πÅ‡∏•‡∏ç‡∏≤‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÅ‡∏•‡∏∞‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
                                { name: "question_3", label: "3. ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÇ‡∏Å‡∏£‡∏ò‡∏Å‡∏±‡∏ö‡∏ç‡∏≤‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
                                { name: "question_4", label: "4. ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ç‡∏≤‡∏ï‡∏¥‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÉ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÜ ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÉ‡∏ô‡∏ó‡∏≤‡∏á‡∏•‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
                                { name: "question_5", label: "5. ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏•‡πâ‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏Å‡∏±‡∏ö‡∏ç‡∏≤‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
                                { name: "question_6", label: "6. ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ç‡πå‡∏Å‡∏±‡∏ö‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏ç‡∏≤‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
                                { name: "question_7", label: "7. ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ç‡∏≤‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
                                { name: "question_8", label: "8. ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏ç‡∏≤‡∏ï‡∏¥‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏≤‡∏á‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
                                { name: "question_9", label: "9. ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏≠‡∏á‡∏ô‡∏±‡πâ‡∏ô‡πÅ‡∏¢‡πà‡∏•‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏ç‡∏≤‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
                                { name: "question_10", label: "10. ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡∏Å‡∏±‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
                                { name: "question_11", label: "11. ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏™‡∏π‡∏ç‡πÄ‡∏™‡∏µ‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ç‡∏≤‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
                                { name: "question_12", label: "12. ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏π‡πÅ‡∏•‡∏ç‡∏≤‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" },
                            ].map((item) => renderRadioGroup(item.label, item.name))}
                            <div className="d-flex justify-content-end mt-2">
                                <span className="clear-selection text-secondary"
                                    onClick={handleClearSelections}>
                                    ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
                                </span>
                            </div>
                            <div className="m-3">
                                <b>
                                    {totalScore !== null && (
                                        <div className={`mt-4 ${getGroupStyle()}`}>
                                            <h4>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏ß‡∏° = <CountUp end={totalScore} duration={2} /></h4>
                                            <p>{burdenMessage}</p>
                                        </div>
                                    )}
                                </b>
                            </div>
                        </form>
                    </div>

                    {/* Footer */}
                    <div className="modal-footer d-flex justify-content-between">
                        <button className="btn-EditMode btn-secondary" onClick={handleCancel}>
                            ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                        </button>
                        <button className="btn-EditMode btnsave" onClick={handleSubmit}>
                            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                        </button>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default ZaritburdeninterviewForm;
